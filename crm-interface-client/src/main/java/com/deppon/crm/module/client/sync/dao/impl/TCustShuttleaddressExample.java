package com.deppon.crm.module.client.sync.dao.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TCustShuttleaddressExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public TCustShuttleaddressExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andFidIsNull() {
			addCriterion("FID is null");
			return (Criteria) this;
		}

		public Criteria andFidIsNotNull() {
			addCriterion("FID is not null");
			return (Criteria) this;
		}

		public Criteria andFidEqualTo(Short value) {
			addCriterion("FID =", value, "fid");
			return (Criteria) this;
		}

		public Criteria andFidNotEqualTo(Short value) {
			addCriterion("FID <>", value, "fid");
			return (Criteria) this;
		}

		public Criteria andFidGreaterThan(Short value) {
			addCriterion("FID >", value, "fid");
			return (Criteria) this;
		}

		public Criteria andFidGreaterThanOrEqualTo(Short value) {
			addCriterion("FID >=", value, "fid");
			return (Criteria) this;
		}

		public Criteria andFidLessThan(Short value) {
			addCriterion("FID <", value, "fid");
			return (Criteria) this;
		}

		public Criteria andFidLessThanOrEqualTo(Short value) {
			addCriterion("FID <=", value, "fid");
			return (Criteria) this;
		}

		public Criteria andFidIn(List<Short> values) {
			addCriterion("FID in", values, "fid");
			return (Criteria) this;
		}

		public Criteria andFidNotIn(List<Short> values) {
			addCriterion("FID not in", values, "fid");
			return (Criteria) this;
		}

		public Criteria andFidBetween(Short value1, Short value2) {
			addCriterion("FID between", value1, value2, "fid");
			return (Criteria) this;
		}

		public Criteria andFidNotBetween(Short value1, Short value2) {
			addCriterion("FID not between", value1, value2, "fid");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeIsNull() {
			addCriterion("FCREATETIME is null");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeIsNotNull() {
			addCriterion("FCREATETIME is not null");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeEqualTo(Date value) {
			addCriterion("FCREATETIME =", value, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeNotEqualTo(Date value) {
			addCriterion("FCREATETIME <>", value, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeGreaterThan(Date value) {
			addCriterion("FCREATETIME >", value, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("FCREATETIME >=", value, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeLessThan(Date value) {
			addCriterion("FCREATETIME <", value, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeLessThanOrEqualTo(Date value) {
			addCriterion("FCREATETIME <=", value, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeIn(List<Date> values) {
			addCriterion("FCREATETIME in", values, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeNotIn(List<Date> values) {
			addCriterion("FCREATETIME not in", values, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeBetween(Date value1, Date value2) {
			addCriterion("FCREATETIME between", value1, value2, "fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreatetimeNotBetween(Date value1, Date value2) {
			addCriterion("FCREATETIME not between", value1, value2,
					"fcreatetime");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridIsNull() {
			addCriterion("FCREATEUSERID is null");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridIsNotNull() {
			addCriterion("FCREATEUSERID is not null");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridEqualTo(Short value) {
			addCriterion("FCREATEUSERID =", value, "fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridNotEqualTo(Short value) {
			addCriterion("FCREATEUSERID <>", value, "fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridGreaterThan(Short value) {
			addCriterion("FCREATEUSERID >", value, "fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridGreaterThanOrEqualTo(Short value) {
			addCriterion("FCREATEUSERID >=", value, "fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridLessThan(Short value) {
			addCriterion("FCREATEUSERID <", value, "fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridLessThanOrEqualTo(Short value) {
			addCriterion("FCREATEUSERID <=", value, "fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridIn(List<Short> values) {
			addCriterion("FCREATEUSERID in", values, "fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridNotIn(List<Short> values) {
			addCriterion("FCREATEUSERID not in", values, "fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridBetween(Short value1, Short value2) {
			addCriterion("FCREATEUSERID between", value1, value2,
					"fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFcreateuseridNotBetween(Short value1, Short value2) {
			addCriterion("FCREATEUSERID not between", value1, value2,
					"fcreateuserid");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeIsNull() {
			addCriterion("FLASTUPDATETIME is null");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeIsNotNull() {
			addCriterion("FLASTUPDATETIME is not null");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeEqualTo(Date value) {
			addCriterion("FLASTUPDATETIME =", value, "flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeNotEqualTo(Date value) {
			addCriterion("FLASTUPDATETIME <>", value, "flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeGreaterThan(Date value) {
			addCriterion("FLASTUPDATETIME >", value, "flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("FLASTUPDATETIME >=", value, "flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeLessThan(Date value) {
			addCriterion("FLASTUPDATETIME <", value, "flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeLessThanOrEqualTo(Date value) {
			addCriterion("FLASTUPDATETIME <=", value, "flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeIn(List<Date> values) {
			addCriterion("FLASTUPDATETIME in", values, "flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeNotIn(List<Date> values) {
			addCriterion("FLASTUPDATETIME not in", values, "flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeBetween(Date value1, Date value2) {
			addCriterion("FLASTUPDATETIME between", value1, value2,
					"flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastupdatetimeNotBetween(Date value1, Date value2) {
			addCriterion("FLASTUPDATETIME not between", value1, value2,
					"flastupdatetime");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridIsNull() {
			addCriterion("FLASTMODIFYUSERID is null");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridIsNotNull() {
			addCriterion("FLASTMODIFYUSERID is not null");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridEqualTo(Short value) {
			addCriterion("FLASTMODIFYUSERID =", value, "flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridNotEqualTo(Short value) {
			addCriterion("FLASTMODIFYUSERID <>", value, "flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridGreaterThan(Short value) {
			addCriterion("FLASTMODIFYUSERID >", value, "flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridGreaterThanOrEqualTo(Short value) {
			addCriterion("FLASTMODIFYUSERID >=", value, "flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridLessThan(Short value) {
			addCriterion("FLASTMODIFYUSERID <", value, "flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridLessThanOrEqualTo(Short value) {
			addCriterion("FLASTMODIFYUSERID <=", value, "flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridIn(List<Short> values) {
			addCriterion("FLASTMODIFYUSERID in", values, "flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridNotIn(List<Short> values) {
			addCriterion("FLASTMODIFYUSERID not in", values,
					"flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridBetween(Short value1, Short value2) {
			addCriterion("FLASTMODIFYUSERID between", value1, value2,
					"flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFlastmodifyuseridNotBetween(Short value1,
				Short value2) {
			addCriterion("FLASTMODIFYUSERID not between", value1, value2,
					"flastmodifyuserid");
			return (Criteria) this;
		}

		public Criteria andFaddressIsNull() {
			addCriterion("FADDRESS is null");
			return (Criteria) this;
		}

		public Criteria andFaddressIsNotNull() {
			addCriterion("FADDRESS is not null");
			return (Criteria) this;
		}

		public Criteria andFaddressEqualTo(String value) {
			addCriterion("FADDRESS =", value, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressNotEqualTo(String value) {
			addCriterion("FADDRESS <>", value, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressGreaterThan(String value) {
			addCriterion("FADDRESS >", value, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressGreaterThanOrEqualTo(String value) {
			addCriterion("FADDRESS >=", value, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressLessThan(String value) {
			addCriterion("FADDRESS <", value, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressLessThanOrEqualTo(String value) {
			addCriterion("FADDRESS <=", value, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressLike(String value) {
			addCriterion("FADDRESS like", value, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressNotLike(String value) {
			addCriterion("FADDRESS not like", value, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressIn(List<String> values) {
			addCriterion("FADDRESS in", values, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressNotIn(List<String> values) {
			addCriterion("FADDRESS not in", values, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressBetween(String value1, String value2) {
			addCriterion("FADDRESS between", value1, value2, "faddress");
			return (Criteria) this;
		}

		public Criteria andFaddressNotBetween(String value1, String value2) {
			addCriterion("FADDRESS not between", value1, value2, "faddress");
			return (Criteria) this;
		}

		public Criteria andFpostcodeIsNull() {
			addCriterion("FPOSTCODE is null");
			return (Criteria) this;
		}

		public Criteria andFpostcodeIsNotNull() {
			addCriterion("FPOSTCODE is not null");
			return (Criteria) this;
		}

		public Criteria andFpostcodeEqualTo(String value) {
			addCriterion("FPOSTCODE =", value, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeNotEqualTo(String value) {
			addCriterion("FPOSTCODE <>", value, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeGreaterThan(String value) {
			addCriterion("FPOSTCODE >", value, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeGreaterThanOrEqualTo(String value) {
			addCriterion("FPOSTCODE >=", value, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeLessThan(String value) {
			addCriterion("FPOSTCODE <", value, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeLessThanOrEqualTo(String value) {
			addCriterion("FPOSTCODE <=", value, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeLike(String value) {
			addCriterion("FPOSTCODE like", value, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeNotLike(String value) {
			addCriterion("FPOSTCODE not like", value, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeIn(List<String> values) {
			addCriterion("FPOSTCODE in", values, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeNotIn(List<String> values) {
			addCriterion("FPOSTCODE not in", values, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeBetween(String value1, String value2) {
			addCriterion("FPOSTCODE between", value1, value2, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFpostcodeNotBetween(String value1, String value2) {
			addCriterion("FPOSTCODE not between", value1, value2, "fpostcode");
			return (Criteria) this;
		}

		public Criteria andFprovinceIsNull() {
			addCriterion("FPROVINCE is null");
			return (Criteria) this;
		}

		public Criteria andFprovinceIsNotNull() {
			addCriterion("FPROVINCE is not null");
			return (Criteria) this;
		}

		public Criteria andFprovinceEqualTo(String value) {
			addCriterion("FPROVINCE =", value, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceNotEqualTo(String value) {
			addCriterion("FPROVINCE <>", value, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceGreaterThan(String value) {
			addCriterion("FPROVINCE >", value, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceGreaterThanOrEqualTo(String value) {
			addCriterion("FPROVINCE >=", value, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceLessThan(String value) {
			addCriterion("FPROVINCE <", value, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceLessThanOrEqualTo(String value) {
			addCriterion("FPROVINCE <=", value, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceLike(String value) {
			addCriterion("FPROVINCE like", value, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceNotLike(String value) {
			addCriterion("FPROVINCE not like", value, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceIn(List<String> values) {
			addCriterion("FPROVINCE in", values, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceNotIn(List<String> values) {
			addCriterion("FPROVINCE not in", values, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceBetween(String value1, String value2) {
			addCriterion("FPROVINCE between", value1, value2, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFprovinceNotBetween(String value1, String value2) {
			addCriterion("FPROVINCE not between", value1, value2, "fprovince");
			return (Criteria) this;
		}

		public Criteria andFcityIsNull() {
			addCriterion("FCITY is null");
			return (Criteria) this;
		}

		public Criteria andFcityIsNotNull() {
			addCriterion("FCITY is not null");
			return (Criteria) this;
		}

		public Criteria andFcityEqualTo(String value) {
			addCriterion("FCITY =", value, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityNotEqualTo(String value) {
			addCriterion("FCITY <>", value, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityGreaterThan(String value) {
			addCriterion("FCITY >", value, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityGreaterThanOrEqualTo(String value) {
			addCriterion("FCITY >=", value, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityLessThan(String value) {
			addCriterion("FCITY <", value, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityLessThanOrEqualTo(String value) {
			addCriterion("FCITY <=", value, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityLike(String value) {
			addCriterion("FCITY like", value, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityNotLike(String value) {
			addCriterion("FCITY not like", value, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityIn(List<String> values) {
			addCriterion("FCITY in", values, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityNotIn(List<String> values) {
			addCriterion("FCITY not in", values, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityBetween(String value1, String value2) {
			addCriterion("FCITY between", value1, value2, "fcity");
			return (Criteria) this;
		}

		public Criteria andFcityNotBetween(String value1, String value2) {
			addCriterion("FCITY not between", value1, value2, "fcity");
			return (Criteria) this;
		}

		public Criteria andFareaIsNull() {
			addCriterion("FAREA is null");
			return (Criteria) this;
		}

		public Criteria andFareaIsNotNull() {
			addCriterion("FAREA is not null");
			return (Criteria) this;
		}

		public Criteria andFareaEqualTo(String value) {
			addCriterion("FAREA =", value, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaNotEqualTo(String value) {
			addCriterion("FAREA <>", value, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaGreaterThan(String value) {
			addCriterion("FAREA >", value, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaGreaterThanOrEqualTo(String value) {
			addCriterion("FAREA >=", value, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaLessThan(String value) {
			addCriterion("FAREA <", value, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaLessThanOrEqualTo(String value) {
			addCriterion("FAREA <=", value, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaLike(String value) {
			addCriterion("FAREA like", value, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaNotLike(String value) {
			addCriterion("FAREA not like", value, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaIn(List<String> values) {
			addCriterion("FAREA in", values, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaNotIn(List<String> values) {
			addCriterion("FAREA not in", values, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaBetween(String value1, String value2) {
			addCriterion("FAREA between", value1, value2, "farea");
			return (Criteria) this;
		}

		public Criteria andFareaNotBetween(String value1, String value2) {
			addCriterion("FAREA not between", value1, value2, "farea");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeIsNull() {
			addCriterion("FADDRESSTYPE is null");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeIsNotNull() {
			addCriterion("FADDRESSTYPE is not null");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeEqualTo(String value) {
			addCriterion("FADDRESSTYPE =", value, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeNotEqualTo(String value) {
			addCriterion("FADDRESSTYPE <>", value, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeGreaterThan(String value) {
			addCriterion("FADDRESSTYPE >", value, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeGreaterThanOrEqualTo(String value) {
			addCriterion("FADDRESSTYPE >=", value, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeLessThan(String value) {
			addCriterion("FADDRESSTYPE <", value, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeLessThanOrEqualTo(String value) {
			addCriterion("FADDRESSTYPE <=", value, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeLike(String value) {
			addCriterion("FADDRESSTYPE like", value, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeNotLike(String value) {
			addCriterion("FADDRESSTYPE not like", value, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeIn(List<String> values) {
			addCriterion("FADDRESSTYPE in", values, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeNotIn(List<String> values) {
			addCriterion("FADDRESSTYPE not in", values, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeBetween(String value1, String value2) {
			addCriterion("FADDRESSTYPE between", value1, value2, "faddresstype");
			return (Criteria) this;
		}

		public Criteria andFaddresstypeNotBetween(String value1, String value2) {
			addCriterion("FADDRESSTYPE not between", value1, value2,
					"faddresstype");
			return (Criteria) this;
		}

		public Criteria andFmemberidIsNull() {
			addCriterion("FMEMBERID is null");
			return (Criteria) this;
		}

		public Criteria andFmemberidIsNotNull() {
			addCriterion("FMEMBERID is not null");
			return (Criteria) this;
		}

		public Criteria andFmemberidEqualTo(Short value) {
			addCriterion("FMEMBERID =", value, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidNotEqualTo(Short value) {
			addCriterion("FMEMBERID <>", value, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidGreaterThan(Short value) {
			addCriterion("FMEMBERID >", value, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidGreaterThanOrEqualTo(Short value) {
			addCriterion("FMEMBERID >=", value, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidLessThan(Short value) {
			addCriterion("FMEMBERID <", value, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidLessThanOrEqualTo(Short value) {
			addCriterion("FMEMBERID <=", value, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidIn(List<Short> values) {
			addCriterion("FMEMBERID in", values, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidNotIn(List<Short> values) {
			addCriterion("FMEMBERID not in", values, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidBetween(Short value1, Short value2) {
			addCriterion("FMEMBERID between", value1, value2, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFmemberidNotBetween(Short value1, Short value2) {
			addCriterion("FMEMBERID not between", value1, value2, "fmemberid");
			return (Criteria) this;
		}

		public Criteria andFstatusIsNull() {
			addCriterion("FSTATUS is null");
			return (Criteria) this;
		}

		public Criteria andFstatusIsNotNull() {
			addCriterion("FSTATUS is not null");
			return (Criteria) this;
		}

		public Criteria andFstatusEqualTo(Short value) {
			addCriterion("FSTATUS =", value, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusNotEqualTo(Short value) {
			addCriterion("FSTATUS <>", value, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusGreaterThan(Short value) {
			addCriterion("FSTATUS >", value, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusGreaterThanOrEqualTo(Short value) {
			addCriterion("FSTATUS >=", value, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusLessThan(Short value) {
			addCriterion("FSTATUS <", value, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusLessThanOrEqualTo(Short value) {
			addCriterion("FSTATUS <=", value, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusIn(List<Short> values) {
			addCriterion("FSTATUS in", values, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusNotIn(List<Short> values) {
			addCriterion("FSTATUS not in", values, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusBetween(Short value1, Short value2) {
			addCriterion("FSTATUS between", value1, value2, "fstatus");
			return (Criteria) this;
		}

		public Criteria andFstatusNotBetween(Short value1, Short value2) {
			addCriterion("FSTATUS not between", value1, value2, "fstatus");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
	 * @mbggenerated  Mon May 28 16:56:56 CST 2012
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DEVELOP.T_CUST_SHUTTLEADDRESS
     *
     * @mbggenerated do_not_delete_during_merge Mon May 28 16:56:56 CST 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}