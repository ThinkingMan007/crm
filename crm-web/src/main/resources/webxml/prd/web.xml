<?xml version="1.0" encoding="UTF-8"?>
<web-app id="web" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<!--
			<context-param> <param-name>contextClass</param-name>
			<param-value>org.jboss.spring.factory.VFSXmlWebApplicationContext</param-value>
			</context-param>
		-->
	<!--config this web app name,it is use to get this web app all functions-->
	<display-name>application</display-name>
<!-- 	
	<distributable/> -->
	
	<context-param>
		<param-name>ssoCurrentApp</param-name>
		<param-value>crm</param-value>
	</context-param>
		
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:com/deppon/**/server/META-INF/spring.xml,/WEB-INF/spring.xml</param-value>
	</context-param>
	<context-param>
		<param-name>staticServerAddress</param-name>
		<param-value>../..</param-value>
	</context-param>
	
	<!-- ##############log4j init 解决jboss下正常加载配置的bug ##########-->
	<context-param>   
		<param-name>log4jConfigLocation</param-name>   
		<param-value>/WEB-INF/classes/log4j.xml</param-value>
	</context-param>
	<listener>   
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener> 
	<!-- #############log4j init end#################### -->
	<listener>
		<listener-class>com.deppon.foss.framework.server.deploy.AppContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 配合监控平台的监听器 开始 2013.12.2 By ZhuPJ-->
	<listener>
		<listener-class>com.deppon.ar.bamp.client.listener.OperatorRequestListener</listener-class>
	</listener>
	<!-- 配合监控平台的监听器 结束 2013.12.2 By ZhuPJ-->
	
	<filter>
		<filter-name>logFilter</filter-name>
		<filter-class>com.deppon.crm.module.frameworkimpl.server.log.LogFilter</filter-class>
	</filter>
	<filter>
		<filter-name>CRMSSO</filter-name>
		<filter-class>com.deppon.crm.module.frameworkimpl.server.filter.CRMSSOFilter</filter-class>
	</filter>
	<filter-mapping>  
	       <filter-name>CRMSSO</filter-name>  
	       <url-pattern>*.action</url-pattern>  
	</filter-mapping>
	<filter>
		<filter-name>i18nAndPermissionFilter</filter-name>
		<filter-class>com.deppon.crm.module.frameworkimpl.server.filter.I18nAndPermissionFilter</filter-class>
		<init-param>
			<param-name>application</param-name>
			<param-value>crm</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>ssoForwardFilter</filter-name>
		<filter-class>com.deppon.foss.framework.server.sso.SSOForwardFilter</filter-class>
	</filter>
	<!-- 
		<servlet>
			<servlet-name>ssoURLRequest</servlet-name>
			<servlet-class>com.deppon.foss.framework.server.sso.servlet.RemoteSSOURLRequestServlet</servlet-class>
		</servlet>
		 -->
	<servlet>
		<servlet-name>ssoURLRequest</servlet-name>
		<servlet-class>com.deppon.crm.module.frameworkimpl.server.ssoImpl.CrmRemoteSSOURLRequestServlet</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>tokenValidateServlet</servlet-name>
		<servlet-class>com.deppon.foss.framework.server.sso.servlet.TokenValidateServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>tokenGenerate</servlet-name>
		<servlet-class>com.deppon.foss.framework.server.sso.servlet.TokenGenerateServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>tokenValidateServlet</servlet-name>
		<url-pattern>/tokenValidate</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>ssoURLRequest</servlet-name>
		<url-pattern>/ssoURLRequest</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>tokenGenerate</servlet-name>
		<url-pattern>/tokenGenerate</url-pattern>
	</servlet-mapping>

	<!-- 
			GUI client config servlet
			If you need to client access, need to open the hessian configuration
		-->
	<!--
		<servlet>
			<servlet-name>hessian</servlet-name>
			<servlet-class>com.deppon.foss.framework.server.web.filter.HessianDispatcher</servlet-class>
			<load-on-startup>1</load-on-startup>
		</servlet>
		<servlet-mapping>
			<servlet-name>hessian</servlet-name>
			<url-pattern>/remoting/*</url-pattern>
		</servlet-mapping>
		-->
	
	<!-- 
			web client config filter mapping
		-->
	
		<filter>
		<filter-name>CAS Filter</filter-name>
		<filter-class>edu.yale.its.tp.cas.client.filter.CASFilter</filter-class>
		
		<!-- 测试 -->
		
		<!-- <init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.loginUrl</param-name>
			<param-value>http://192.168.20.114:8085/portal/cas.login</param-value>
		</init-param>
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.validateUrl</param-name>
			<param-value>http://192.168.20.105:8000/cas/serviceValidate</param-value>
		</init-param>
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.serverName</param-name>
			<param-value>192.168.20.175:8080</param-value>
		</init-param> -->
		
		
		<!-- 正式 -->
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.loginUrl</param-name>
			<param-value>http://192.168.2.122/portal/cas.login</param-value>
		</init-param>
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.validateUrl</param-name>
			<param-value>http://192.168.2.145/cas/serviceValidate</param-value>
		</init-param>
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.serverName</param-name>
			<param-value>crm.deppon.com</param-value>
		</init-param>
		<init-param>
			<param-name>edu.yale.its.tp.cas.client.filter.initContextClass</param-name>
			<param-value>com.deppon.crm.module.frameworkimpl.server.ssoImpl.OAToCRMByCasInit</param-value>
		</init-param>
	<!-- 	<init-param> -->
	<!-- 		<param-name>edu.yale.its.tp.cas.client.filter.userLoginMark</param-name> -->
	<!-- 		<param-value>userObject</param-value> -->
	<!-- 	</init-param> -->
	</filter>
		<filter-mapping>
			<filter-name>CAS Filter</filter-name>
			<url-pattern>/workflow/detailWorkflow.action</url-pattern>
		</filter-mapping>
		<filter-mapping>
			<filter-name>CAS Filter</filter-name>
			<url-pattern>/workflow/approveWorkflow.action</url-pattern>
		</filter-mapping>
		<filter-mapping>
			<filter-name>CAS Filter</filter-name>
			<url-pattern>*.jsp</url-pattern>
		</filter-mapping>
	
	
	
	
	
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
		<init-param>
			<param-name>configProviders</param-name>
			<param-value>com.deppon.foss.framework.server.deploy.struts.ModuleConfigProvider</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>framework</filter-name>
		<filter-class>com.deppon.foss.framework.server.web.filter.FrameworkFilter</filter-class>
		<init-param>
			<param-name>expression</param-name>	
			<param-value>(?i)(javascript)+</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ssoForwardFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>framework</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>logFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>framework</filter-name>
		<url-pattern>/i18n_permission_acess/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>i18nAndPermissionFilter</filter-name>
		<url-pattern>/i18n_permission_acess/*</url-pattern>
	</filter-mapping>
	
	<!-- 
			GUI client config servlet
			If you need to client access, need to open the hessian configuration
		-->
	<!--
		<filter-mapping>
			<filter-name>framework</filter-name>
			<url-pattern>/remoting/*</url-pattern>
		</filter-mapping>
		-->
	
	<filter-mapping>
		<filter-name>framework</filter-name>
		<url-pattern>/webservice/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	

	<resource-ref>
		<res-ref-name>jdbc/crmdb</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	
	<resource-ref>
		<res-ref-name>jdbc/crmdb_log</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

	<!-- <resource-ref>
			<res-ref-name>jms/queueManager</res-ref-name>
			<res-type>com.ibm.mq.jms.MQQueueConnectionFactory</res-type>
			<res-auth>Container</res-auth>
		</resource-ref>
		<resource-ref>
			<res-ref-name>jms/exception</res-ref-name>
			<res-type>com.ibm.mq.jms.MQQueue</res-type>
			<res-auth>Container</res-auth>
		</resource-ref>
		<resource-ref>
			<res-ref-name>jms/performance</res-ref-name>
			<res-type>com.ibm.mq.jms.MQQueue</res-type>
			<res-auth>Container</res-auth>
		</resource-ref> -->
	
	<!-- Welcome file lists -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	
	<error-page>
		<error-code>404</error-code>
		<location>/404ErrorPage.html</location>
	</error-page>
	
	<error-page>
		<error-code>500</error-code>
		<location>/500ErrorPage.html</location>
	</error-page>
</web-app>
