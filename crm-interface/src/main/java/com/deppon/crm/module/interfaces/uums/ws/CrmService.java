package com.deppon.crm.module.interfaces.uums.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

import com.deppon.crm.module.interfaces.uums.UumsToCrmService;

/**
 * This class was generated by Apache CXF 2.7.3
 * 2013-11-29T18:35:59.812+08:00
 * Generated source version: 2.7.3
 * 
 */
@WebServiceClient(name = "crmService", 
                  wsdlLocation = "file:/E:/workspace_deppon/crm-interface-1226/src/main/java/com/deppon/crm/module/interfaces/uums/wsdl/CRMService.wsdl",
                  targetNamespace = "http://www.deppon.com/crm/crmService") 
public class CrmService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.deppon.com/crm/crmService", "crmService");
    public final static QName NewWSDLFileSOAP = new QName("http://www.deppon.com/crm/crmService", "newWSDLFileSOAP");
    static {
        URL url = null;
        try {
            url = new URL("file:/E:/workspace_deppon/crm-interface-1226/src/main/java/com/deppon/crm/module/interfaces/uums/wsdl/CRMService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CrmService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/E:/workspace_deppon/crm-interface-1226/src/main/java/com/deppon/crm/module/interfaces/uums/wsdl/CRMService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CrmService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CrmService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CrmService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns UumsToCrmService
     */
    @WebEndpoint(name = "newWSDLFileSOAP")
    public UumsToCrmService getNewWSDLFileSOAP() {
        return super.getPort(NewWSDLFileSOAP, UumsToCrmService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UumsToCrmService
     */
    @WebEndpoint(name = "newWSDLFileSOAP")
    public UumsToCrmService getNewWSDLFileSOAP(WebServiceFeature... features) {
        return super.getPort(NewWSDLFileSOAP, UumsToCrmService.class, features);
    }

}
